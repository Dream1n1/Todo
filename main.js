(()=>{"use strict";var n={904:(n,e,t)=>{t.d(e,{c:()=>c});var o=t(648),r=t.n(o),a=t(312),i=t.n(a)()(r());i.push([n.id,'* {\n    margin: 0;\n    padding: 0;\n    font-family: cursive;\n}\n\nbody {\n    background-color: #a5a5a5;\n    display: flex;\n    flex-flow: column;\n}\n\nbutton {\n    padding: 7px;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: #e6ab16;\n    background-color: #ffffff;\n    cursor: pointer;\n}\nbutton:hover {\n    font-weight: bold;\n    color: #ffffff;\n    padding: 10px;\n    background-color: #eeb934;\n    transform: rotate(7deg);\n    transition: 50ms;\n}\n\n.header {\n    display: grid;\n    background-color: #2a9d8f;\n    padding: 20px;\n    box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    -webkit-box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    -moz-box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    z-index: 999;\n}\n.header > h1 {\n    justify-self: center;\n    align-self: center;\n    color: white;\n}\n\n\n.container {\n    display: grid;\n    grid-template-columns: 30% 70%;\n    height: calc(100vh - 84px);\n}\n\nform {\n    margin-bottom: 15px;\n}\n\n.sideBar {\n    padding: 10px;\n    padding-top: 15px;\n    background-color: #d3d3d3;\n}\n\n.project_name_input{\n    border: 2px;\n    border-style: solid;\n    border-color: #a8a8a8;\n    border-radius: 15px;\n    padding: 10px;\n}\n\n.projectList {\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: center;\n    padding-right:5px ;\n    max-width: 200px;\n}\n\n.project {\n    padding: 5px 5px;\n    margin: 2px;\n    border-radius: 10px;\n    color: #ffffff;\n    background-color: #4d424d;\n    font-size: 20px;\n    font-weight: 300;\n    text-align: center;\n    cursor: pointer;\n}\n.project:hover {\n    background-color: #e6ab16;\n}\n\n.content {\n    justify-self: end;\n    margin-right: 10%;\n    padding: 10px;\n    padding-top: 15px;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column-reverse;\n}\n#task_form > input {\n    border: 2px;\n    border-style: solid;\n    border-color: green;\n    border-radius: 15px;\n    padding: 10px;\n}\n.task_item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background-color: #e0e0e0;\n    border-style: solid;\n    border-color: #797979;\n    margin-bottom: 5px;\n}\n.task_item > div {\n    color: #4d424d;\n}\n.task_name {\n    padding: 5px;\n    border-radius: 10%;\n    font-weight: bold;\n    font-size: 20px;\n    color: teal;\n    text-decoration: none;\n}\n\ninput[type="checkbox"] {\n    width: 20px;\n    height: 20px;\n    accent-color: #459d2a;\n    cursor: pointer;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,qBAAqB;IACrB,yBAAyB;IACzB,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,yBAAyB;IACzB,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,aAAa;IACb,6CAA6C;IAC7C,qDAAqD;IACrD,kDAAkD;IAClD,YAAY;AAChB;AACA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,YAAY;AAChB;;;AAGA;IACI,aAAa;IACb,8BAA8B;IAC9B,0BAA0B;AAC9B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,mBAAmB;IACnB,qBAAqB;IACrB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,mBAAmB;IACnB,cAAc;IACd,yBAAyB;IACzB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,WAAW;IACX,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,qBAAqB;IACrB,kBAAkB;AACtB;AACA;IACI,cAAc;AAClB;AACA;IACI,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,eAAe;AACnB",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n    font-family: cursive;\n}\n\nbody {\n    background-color: #a5a5a5;\n    display: flex;\n    flex-flow: column;\n}\n\nbutton {\n    padding: 7px;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: #e6ab16;\n    background-color: #ffffff;\n    cursor: pointer;\n}\nbutton:hover {\n    font-weight: bold;\n    color: #ffffff;\n    padding: 10px;\n    background-color: #eeb934;\n    transform: rotate(7deg);\n    transition: 50ms;\n}\n\n.header {\n    display: grid;\n    background-color: #2a9d8f;\n    padding: 20px;\n    box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    -webkit-box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    -moz-box-shadow: 0px 3px 7px -1px rgba(0,0,0,0.41);\n    z-index: 999;\n}\n.header > h1 {\n    justify-self: center;\n    align-self: center;\n    color: white;\n}\n\n\n.container {\n    display: grid;\n    grid-template-columns: 30% 70%;\n    height: calc(100vh - 84px);\n}\n\nform {\n    margin-bottom: 15px;\n}\n\n.sideBar {\n    padding: 10px;\n    padding-top: 15px;\n    background-color: #d3d3d3;\n}\n\n.project_name_input{\n    border: 2px;\n    border-style: solid;\n    border-color: #a8a8a8;\n    border-radius: 15px;\n    padding: 10px;\n}\n\n.projectList {\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: center;\n    padding-right:5px ;\n    max-width: 200px;\n}\n\n.project {\n    padding: 5px 5px;\n    margin: 2px;\n    border-radius: 10px;\n    color: #ffffff;\n    background-color: #4d424d;\n    font-size: 20px;\n    font-weight: 300;\n    text-align: center;\n    cursor: pointer;\n}\n.project:hover {\n    background-color: #e6ab16;\n}\n\n.content {\n    justify-self: end;\n    margin-right: 10%;\n    padding: 10px;\n    padding-top: 15px;\n}\n\n.tasks {\n    display: flex;\n    flex-direction: column-reverse;\n}\n#task_form > input {\n    border: 2px;\n    border-style: solid;\n    border-color: green;\n    border-radius: 15px;\n    padding: 10px;\n}\n.task_item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background-color: #e0e0e0;\n    border-style: solid;\n    border-color: #797979;\n    margin-bottom: 5px;\n}\n.task_item > div {\n    color: #4d424d;\n}\n.task_name {\n    padding: 5px;\n    border-radius: 10%;\n    font-weight: bold;\n    font-size: 20px;\n    color: teal;\n    text-decoration: none;\n}\n\ninput[type="checkbox"] {\n    width: 20px;\n    height: 20px;\n    accent-color: #459d2a;\n    cursor: pointer;\n}'],sourceRoot:""}]);const c=i},312:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},648:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},596:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var d=n[c],A=o.base?d[0]+o.base:d[0],l=a[A]||0,s="".concat(A," ").concat(l);a[A]=l+1;var p=t(s),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:s,updater:f,references:1})}i.push(s)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var d=o(n,r),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},176:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},808:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},120:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},520:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},936:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(596),e=t.n(n),o=t(520),r=t.n(o),a=t(176),i=t.n(a),c=t(120),d=t.n(c),A=t(808),l=t.n(A),s=t(936),p=t.n(s),u=t(904),f={};f.styleTagTransform=p(),f.setAttributes=d(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),e()(u.c,f),u.c&&u.c.locals&&u.c.locals;let B=[];class b{constructor(n,e,t,o){this.title=n,this.due_date=e,this.note=t,this.check="uncheck"}}function m(n,e,t,o,r,a){const i=document.querySelector(".tasks");let c=document.createElement("div");c.className="task_item";let d=document.createElement("button");d.innerHTML="Delete",d.className="delete_task",d.addEventListener("click",(()=>{var e,t,o;e=i,t=n[r],o=l,t.splice(o,1),e.hasChildNodes()&&e.removeChild(e.children[o])}));let A=document.createElement("input");A.setAttribute("type","checkbox"),A.className="task_check";let l=n[r].indexOf(a);A.addEventListener("click",(()=>{B?1==A.checked?(n[r][l].check="checked",c.childNodes.forEach((n=>{n.style.textDecoration="line-through"})),f.style.textDecoration="none",d.style.textDecoration="none"):(n[r][l].check="uncheck",c.childNodes.forEach((n=>{n.style.textDecoration="none"}))):A.checked=!1}));let s=document.createElement("div");s.className="task_name",s.innerHTML=e;let p=document.createElement("div");p.className="task_date",p.innerHTML=t;let u=document.createElement("div");u.className="task_note",u.innerHTML=o;let f=document.createElement("button");f.innerHTML="Edit",f.className="modify_task";let B=!0;f.addEventListener("click",(()=>{var e,t,o,a;1!=A.checked&&(B?(t=p,o=u,a=f,(e=s).setAttribute("contenteditable","true"),t.setAttribute("contenteditable","true"),o.setAttribute("contenteditable","true"),e.style.color="black",t.style.color="black",o.style.color="black",e.style.backgroundColor="white",t.style.backgroundColor="white",o.style.backgroundColor="white",e.style.padding="10px 20px",t.style.padding="10px 20px",o.style.padding="10px 20px",a.innerHTML="Save",e.focus(),B=!1):(function(n,e,t,o,r,a,i){o.setAttribute("contenteditable","false"),r.setAttribute("contenteditable","false"),a.setAttribute("contenteditable","false"),o.style.color="#4d424d",r.style.color="#4d424d",a.style.color="#4d424d",o.style.backgroundColor="#e0e0e0",r.style.backgroundColor="#e0e0e0",a.style.backgroundColor="#e0e0e0",o.style.padding="5px",r.style.padding="5px",a.style.padding="5px",i.innerHTML="Edit",n[e][t].title=o.innerHTML,n[e][t].due_date=r.innerHTML,n[e][t].note=a.innerHTML,console.log(n)}(n,r,l,s,p,u,f),B=!0))})),c.appendChild(A),c.appendChild(s),c.appendChild(p),c.appendChild(u),c.appendChild(f),c.appendChild(d),"checked"==n[r][l].check?(A.checked=!0,c.childNodes.forEach((n=>{n.style.textDecoration="line-through"})),f.style.textDecoration="none",d.style.textDecoration="none"):c.childNodes.forEach((n=>{n.style.textDecoration="none"})),i.appendChild(c)}function x(n){for(;n.firstChild;)n.removeChild(n.firstChild)}const C=document.querySelector(".project_name_input"),g=document.querySelector(".projectList"),h=document.querySelector("#task_name_input"),y=document.querySelector("#task_date_input"),I=document.querySelector("#task_note_input"),v=document.querySelector(".tasks");let k,E,w=0;function j(n){B.push([]),x(v);let e=document.createElement("div");return e.className="project",e.setAttribute("id",w.toString()),e.innerHTML=n,g.childNodes.forEach((n=>{n.style.borderStyle="none"})),e.style.borderStyle="solid",e.style.borderColor="black",E=w,k=w,e.addEventListener("click",(n=>(g.childNodes.forEach((n=>{n.style.borderStyle="none"})),e.style.borderStyle="solid",e.style.borderColor="black",E=k,k=parseInt(n.target.id),E==k?void 0:(x(v),B[k].forEach((n=>{m(B,n.title,n.due_date,n.note,k,n)})),k)))),g.appendChild(e),w++,k}function _(n,e,t){let o=function(n,e,t,o,r){let a=new b(e,t,o,void 0);return B[n].push(a),a}(k,n,e,t);m(B,n,e,t,k,o)}j("Important"),_("Workout","2024-02-18","Leg day");const L=document.querySelector(".submitProject"),S=document.querySelector(".submitTask");L.addEventListener("click",(function(){""!=C.value&&(j(C.value),C.value="")})),S.addEventListener("click",(function(){h.value&&y.value&&(_(h.value,y.value,I.value),h.value="",y.value="",I.value="")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,